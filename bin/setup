#!/bin/bash

# Exit on error
set -e

# Debug function
debug() {
    if [ "${DEBUG:-false}" = "true" ]; then
        echo "$1"
    fi
}

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOTFILES_DIR="$(dirname "$SCRIPT_DIR")"

# Homebrew install function
brew_quiet() {
    if [ "${DEBUG:-false}" = "true" ]; then
        brew "$@"
    else
        brew "$@" >/dev/null 2>&1
    fi
}

# Install Homebrew
bootstrap_homebrew() {
    if ! command -v brew &> /dev/null; then
        debug "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        # Add Homebrew to PATH
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
    else
        debug "Homebrew already installed, updating..."
        brew_quiet update
    fi
}

# Install mise
bootstrap_mise() {
    if ! command -v mise &> /dev/null; then
        debug "Installing mise..."
        brew_quiet install mise
    else
        debug "mise already installed"
    fi

    eval "$(mise activate bash)"
}

# Install gum for better UI
bootstrap_gum() {
    if ! command -v gum &> /dev/null; then
        debug "Installing gum..."
        brew_quiet install gum
    else
        debug "gum already installed"
    fi
}

# Bootstrap minimal environment to get modern Ruby
bootstrap_ruby() {
    debug "Installing latest Ruby via mise..."
    mise use --global ruby@latest >/dev/null
    mise install ruby@latest >/dev/null

    debug "Ruby bootstrap complete. Modern Ruby should now be available."
}

main() {
    debug "Starting macOS development environment setup..."

    bootstrap_homebrew
    bootstrap_ruby
    bootstrap_gum

    cd "$DOTFILES_DIR"
    ruby lib/newenv.rb

    echo "Installation complete! Please restart your terminal for all changes to take effect."
}

main "$@"
